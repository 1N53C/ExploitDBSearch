#!/usr/bin/python3.6

import os
import subprocess
import time
import yaml
import compare
import schedule
from itertools import islice

# Reading keywords from config file
with open(os.path.join(os.path.dirname(__file__), '../config/search.yaml'), 'r') as search_config:
    search_keywords = yaml.load(search_config, Loader=yaml.FullLoader)['search']['keywords']


def run_main():
    print("Test")
    search()
    get_last_files()


def create_timestamp():
    return str(time.time()).split('.')[0]


def get_last_files():
    for s in search_keywords:
        cwd = create_dir(s)
        create_compare_dir()
        files = [os.path.join(cwd + '/output/' + s + '/', x) for x in os.listdir(cwd + '/output/' + s + '/') if
                 x.endswith('_' + s + '.txt')]
        files.sort()
        last_two_files_array = list(islice(reversed(files), 0, 2))
        last_two_files_array.reverse()
        compare.compare_files(last_two_files_array[0], last_two_files_array[1], s)


# Searching on searchsploit and create a file for the output
def search():
    for s in search_keywords:
        create_dir(s)
        cmd = 'searchsploit ' + s
        output = subprocess.check_output(cmd, shell=True, text=True)
        out_file = open('output/' + s + '/{0}_{1}.txt'.format(create_timestamp(), s), "a")
        out_file.write(output)
        out_file.close()


# Create directory in output folder named according to the search keyword, if not existing
def create_dir(name):
    cwd = os.getcwd()
    if not os.path.exists(cwd + '/output/' + name):
        os.makedirs(cwd + '/output/' + name)
    return cwd


# Creates a compared files directory, if not existing
def create_compare_dir():
    cwd = os.getcwd()
    if not os.path.exists(cwd + '/compared_files/'):
        os.makedirs(cwd + '/compared_files/')


schedule.every(10).seconds.do(run_main)

while True:
    schedule.run_pending()
    time.sleep(1)
