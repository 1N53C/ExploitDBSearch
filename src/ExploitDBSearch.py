#!/usr/bin/python3

import os
import time
import subprocess
import compare
from itertools import islice


searches = ['jira', 'confluence', 'gitlab']


def create_timestamp():
    return str(time.time()).split('.')[0]

def get_last_files():
    for s in searches:
        cwd = create_dir(s)
        files = [os.path.join(cwd + '/output/' + s + '/', x) for x in os.listdir(cwd + '/output/' + s + '/') if x.endswith('_' + s + '.txt')]
        files.sort()
        last_two_files_array = list(islice(reversed(files), 0, 2))
        last_two_files_array.reverse()
        compare.compare_files(last_two_files_array[0],last_two_files_array[1], s)
        """
        DBG
        print(last_two_files_array[0].split('/')[7])
        print(last_two_files_array[1].split('/')[7])
        """

# Searching on searchsploit and create a file for the output
def search():
    for s in searches:
        cmd = 'searchsploit ' + s
        output = subprocess.check_output(cmd, shell=True, text=True)
        out_file = open('output/' + s + '/{0}_{1}.txt'.format(create_timestamp(), s), "a")
        out_file.write(output)
        out_file.close()

# Create directory in output folder named according to the search keyword, if not exists
def create_dir(name):
    cwd = os.getcwd()
    if not os.path.exists(cwd + '/output/' + name):
        os.makedirs(cwd + '/output/' + name)
    return cwd


search()
get_last_files()
